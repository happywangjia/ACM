package learning.bianyi4;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Scanner;
import java.util.Stack;

public class DTNFA {
	private static String path = "/media/hijj/娱乐/github/repositories/ACM/Java/src/learning/bianyi4/";
	private static HashMap<String, String> map = new HashMap<String, String>();
	private static String[] arr = { "a", "*", ".", "|", "(", ")", "#" };
	private static Stack<String> stack = new Stack<String>();
	private static Scanner cin = new Scanner(System.in);
	private static List<NFA> list = new LinkedList<NFA>();
	private static String priority="err,>,>,>,err,>,>,<,err,>,>,<,>,>,<,<,>,>,<,>,>,<,"
			+ "<,<,>,<,>,>,<,<,<,<,<,=,err,err,>,>,>,>,err,>,<,<,<,<,<,err,=";
	
	public static void main(String[] args) {
		init();
		String str = cin.next();
		stack.clear();
		stack.push("#");
		int kk = 0;
		list.clear();
		int len = str.length();
		int haha = 1;
		while (kk < len) {
			String st = stack.lastElement();
			String rr = str.charAt(kk) + "";
			String st1 = st;
			String rr1 = rr;
			if (!conta(st1)) {
				st1 = "a";
			}
			if (!conta(rr)) {
				rr1 = "a";
			}
			String jiao = map.get(st1 + rr1);
			System.out.println(stack);
			if (jiao.equals("err")) {
				System.out.println("error");
				return;
			} else if (jiao.equals("<")) {
				stack.push(rr);
				kk++;
				continue;
			} else if (jiao.equals(">")) {
				if (st1.equals("a")) {
					NFA nfa = new NFA();
					nfa.from = haha++;
					nfa.to = haha++;
					nfa.varch = st;
					list.add(nfa);
					stack.pop();
					continue;
				} else if (st1.equals(".")) {

				}
				if (st.equals("|")) {

				}

			} else if (jiao.equals("=")) {
				if (st.equals("#")) {
					System.out.println("finish!");
				}
				stack.pop();
				kk++;
				continue;
			}
		}
		int m = 0;
		while (m < list.size()) {
			NFA nfa = list.get(m);
			System.out.println(nfa.from + "  " + nfa.to + "  " + nfa.varch);
			m++;
		}
	}

	private static boolean conta(String str) {
		for (int i = 0; i < arr.length; i++) {
			if (arr[i].equals(str)) {
				return true;
			}
		}
		return false;
	}

	private static void init() {
		String[] pri=priority.split(",");
		int d=0;
		int len = arr.length;
		for (int i = 0; i < len; i++) {
			for (int j = 0; j < len; j++) {
				String stack = arr[i];
				String r = arr[j];
				map.put(stack + r, pri[d++]);
			}
		}
	}
}

class NFA {
	int from;
	int to;
	String varch;
}
// *(a|b).(a.b|b.b).*(a|b)#
// *(a|b).(a.b|b.b).(a|b)#
