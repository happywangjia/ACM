package leetcode;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.List;

public class N15_3Sum {
	public static List<List<Integer>> threeSum(int[] nums) {
		int len = nums.length;
		if(len<=2) return null;
		Arrays.sort(nums);
		List<List<Integer>> ww=new ArrayList<>();
		for(int i=len-1;i>=2;i--){
			if(i<len-1&&nums[i]==nums[i+1])
				continue;
			List<List<Integer>> list=twoSum(nums,i, -nums[i]);
			for(int j=0;j<list.size();j++){
				list.get(j).add(nums[i]);
				ww.add(list.get(j));
			}
		}
		return ww;
	}
	public static List<List<Integer>> twoSum(int[] num,int end,int target){
		HashMap<Integer, Integer> hashMap=new HashMap<>();
		List<List<Integer>> listContain=new ArrayList<>();
		for(int i=0;i<end;i++){
			Integer n=hashMap.get(num[i]);
			if(n==null){
				hashMap.put(num[i], i);
			}
			n=hashMap.get(target-num[i]);
			if(n!=null&&n<i){
				List<Integer> list=new ArrayList<>();
				list.add(num[n]);
				list.add(num[i]);
				listContain.add(list);
			}
		}
		return listContain;
	}
	
	public static void main(String[] args) {
		int[] arrs={-1,0,1,2,-1,-4};
		System.out.println(threeSum(arrs));
	}
}
